generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  userId         String    @id @default(dbgenerated("gen_random_uuid()")) @map("user_id") @db.Uuid
  username       String    @unique
  email          String    @unique
  passwordHash   String    @map("password_hash")
  profilePicture String?   @map("profile_picture")
  bio            String?
  fullName       String    @map("full_name")
  posts          Post[]
  comments       Comment[]
  likes          Like[]

  @@map("users")
}

model Post {
  postId    String    @id @default(dbgenerated("gen_random_uuid()")) @map("post_id") @db.Uuid
  createdAt DateTime  @default(now()) @map("created_at")
  user      User      @relation(fields: [userId], references: [userId])
  userId    String    @map("user_id") @db.Uuid
  comments  Comment[]
  likes     Like[]
  media     Media[]

  @@map("posts")
}

model Comment {
  commentId String   @id @default(dbgenerated("gen_random_uuid()")) @map("comment_id") @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  postId    String   @map("post_id") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")
  content   String
  user      User     @relation(fields: [userId], references: [userId])
  post      Post     @relation(fields: [postId], references: [postId])

  @@map("comments")
}

model Like {
  likeId    String   @id @default(dbgenerated("gen_random_uuid()")) @map("like_id") @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  postId    String   @map("post_id") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [userId])
  post      Post     @relation(fields: [postId], references: [postId])

  @@map("likes")
}

model Media {
  mediaId   String @id @default(dbgenerated("gen_random_uuid()")) @map("media_id") @db.Uuid
  postId    String @map("post_id") @db.Uuid
  mediaUrl  String @map("media_url")
  mediaType String @map("media_type")
  post      Post   @relation(fields: [postId], references: [postId])

  @@map("media")
}
